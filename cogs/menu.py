import discord
from discord.ext import commands
from defi.cargos import criar_cargos  # Importa a classe Cargos para usar a l√≥gica de criar cargos
from defi.deletar_cargos import deletar_cargos  # Importa a fun√ß√£o de deletar cargos
from defi.criar_salas import Salas  # Importa a classe Salas

guild_id = 1317859302157058048  # Defina o ID da guilda para registrar o comando

async def setup(bot):
    # Registra o comando '/menu' com a intera√ß√£o de slash
    @bot.tree.command(guild=discord.Object(id=guild_id), name='menu', description='Comando de teste com pagina√ß√£o')
    async def slash2(interaction: discord.Interaction):
        # Cria a embed inicial sem o bot√£o "A√ß√£o"
        embed = discord.Embed(
            title="Menu üõ†Ô∏è",
            description="Configure seu bot.\n Use 'Pr√≥ximo' para avan√ßar.\n\nEscolha a a√ß√£o desejada e siga os passos.\n\nSe tiver d√∫vidas, entre em contato com o suporte."
        )
        embed.set_footer(text="Configura√ß√£o")

        # Cria a view com os bot√µes
        view = TesteView(bot)

        # Envia a mensagem com a embed e a view
        await interaction.response.send_message(embed=embed, view=view, ephemeral=False)


class TesteView(discord.ui.View):
    def __init__(self, bot):
        super().__init__()
        self.bot = bot
        self.current_page = 0  # P√°gina inicial (menu)
        self.update_buttons()

    @discord.ui.button(label="Voltar", style=discord.ButtonStyle.blurple, disabled=True)
    async def previous_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        if self.current_page > 0:
            self.current_page -= 1
            embed = self.create_embed()
            self.update_buttons()
            await interaction.response.edit_message(embed=embed, view=self)

    @discord.ui.button(label="Pr√≥ximo", style=discord.ButtonStyle.blurple)
    async def next_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        if self.current_page < 3:  # Ajuste de n√∫mero de p√°ginas
            self.current_page += 1
            embed = self.create_embed()
            self.update_buttons()
            await interaction.response.edit_message(embed=embed, view=self)

    @discord.ui.button(label="A√ß√£o", style=discord.ButtonStyle.green, disabled=True)
    async def action_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        # Envia mensagem inicial de "aguarde"
        await interaction.response.send_message("Aguarde enquanto a a√ß√£o √© executada...", ephemeral=True)

        try:
            # Executa a a√ß√£o de criar cargos se estiver na p√°gina 1
            if self.current_page == 1:
                await criar_cargos(self.bot, interaction.guild, interaction.user)  # Chama a fun√ß√£o diretamente
                success_message = "Cargos criados com sucesso!"  # Mensagem de sucesso ap√≥s a a√ß√£o
            elif self.current_page == 3:
                await deletar_cargos(self.bot, interaction.guild, interaction.user)
                success_message = "Cargos deletados com sucesso!"
            elif self.current_page == 2:
                # Criando a inst√¢ncia da classe Salas
                salas = Salas(self.bot)  # Passando o bot para a classe Salas

                # Agora chamamos o m√©todo criar_salas com os par√¢metros necess√°rios
                response = await salas.criar_salas(interaction.guild, interaction.user)  # Passa a guild e o author
                success_message = response  # Mensagem retornada pela fun√ß√£o criar_salas
        
            # Edita apenas a mensagem com o status de sucesso
            await interaction.edit_original_response(content=success_message)

        except Exception as e:
            # Caso ocorra um erro durante a execu√ß√£o da a√ß√£o
            await interaction.edit_original_response(content=f"Erro: {str(e)}")

    @discord.ui.button(label="Fechar", style=discord.ButtonStyle.red)
    async def close_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.message.delete()

    def create_embed(self):
        # Cria uma embed com base na p√°gina atual
        embed = discord.Embed(
            title=f"P√°gina {self.current_page}",
            description=f"Conte√∫do din√¢mico para a p√°gina {self.current_page}. Clique no bot√£o para realizar uma a√ß√£o."
        )

        if self.current_page == 0:
            embed.title = "Menu üõ†Ô∏è"
            embed.description = "Configure seu bot.\n Use 'Pr√≥ximo' para avan√ßar.\n\nEscolha a a√ß√£o desejada e siga os passos.\n\nSe tiver d√∫vidas, entre em contato com o suporte."
            self.children[2].disabled = True  # Desabilita o bot√£o "A√ß√£o" na p√°gina inicial
        elif self.current_page == 1:
            embed.title = "Cargos ü•â"
            embed.description = "Clique em 'A√ß√£o' para criar os cargos necess√°rios.\nVo√ß√™ receber√° uma confirma√ß√£o que foram criados.\n\nOs cargos s√£o necess√°rios para acesso as salas ‚ö†Ô∏è"
            self.children[2].disabled = False  # Ativa o bot√£o "A√ß√£o" na p√°gina 1
        elif self.current_page == 2:
            embed.title = "Salas üè†"
            embed.description = "Deseja criar as salas configuradas para grupos rankeados?\nClique em 'A√ß√£o' para cria-las.\n\nSomente pessoas com ranking e cargo poder√£o acess√°-las üö®"
            self.children[2].disabled = False  # Ativa o bot√£o "A√ß√£o" na p√°gina 2
        elif self.current_page == 3:
            embed.title = "Deletar cargos üóëÔ∏è"
            embed.description = "Deseja deletar os cargos criados?\nClique em 'A√ß√£o' para deleta-los."
            self.children[2].disabled = False  # Desativa o bot√£o "A√ß√£o" na p√°gina 3, caso n√£o tenha a√ß√£o

        embed.set_footer(text=f"P√°gina {self.current_page}")
        return embed

    def update_buttons(self):
        # Atualiza os estados dos bot√µes com base na p√°gina atual
        self.children[0].disabled = self.current_page == 0  # Desabilita o bot√£o "Voltar" na p√°gina inicial
        self.children[1].disabled = self.current_page == 3  # Desabilita o bot√£o "Pr√≥ximo" na √∫ltima p√°gina
